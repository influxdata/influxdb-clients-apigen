version: 2.1

commands:
  influxdb-onboarding:
    parameters:
      script-name:
        type: string
        default: "influxdb-onboarding"
    steps:
      - run:
          name: "Post onBoarding request to InfluxDB 2"
          command: ./scripts/<< parameters.script-name >>.sh
  build-generator:
    steps:
      - run: mvn -f openapi-generator/pom.xml clean install -DskipTests
  download-oss-swagger:
    parameters:
      contracts:
        type: string
        description: separete by space
        default: "oss.yml"
    steps:
      - run:
          name: "Download contracts: << parameters.contracts >>"
          command: |
              contracts="<< parameters.contracts >>"
              for contract in `echo $contracts`; do
                curl https://raw.githubusercontent.com/influxdata/openapi/master/contracts/$contract --output ./$contract
              done
  clone-client:
    parameters:
      client:
        type: string
      branch:
        type: string
    steps:
      - run:
          command: |
            mkdir -p ./build
            git clone --single-branch --branch << parameters.branch >> https://github.com/influxdata/<< parameters.client >> ./build/<< parameters.client >>

jobs:
  generate-client:
    docker:
      - image: "circleci/openjdk:8-stretch"
    parameters:
      client:
        type: string
      branch:
        type: string
        default: "master"
      contracts:
        type: string
        default: "oss.yml"
    steps:
      - checkout
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - &cache-key maven-cache_v1-{{ checksum "openapi-generator/pom.xml" }}
            - maven-cache_v1
      - build-generator
      - download-oss-swagger:
          contracts: << parameters.contracts >>
      - run:
          name: "Merge Contracts: << parameters.contracts >>"
          command: |
            mvn -f openapi-generator/core/pom.xml exec:java -Dexec.mainClass="com.influxdb.MergeContracts" -Dexec.args="<< parameters.contracts >>"
      - clone-client:
          client: influxdb-client-<< parameters.client >>
          branch: << parameters.branch >>
      - run:
          name: "Generate << parameters.client >> client"
          command: |
            ./generate-<< parameters.client >>.sh
      - persist_to_workspace:
          root: build
          paths:
            - ./influxdb-client-<< parameters.client >>
      - save_cache:
          name: Saving Maven Cache
          key: *cache-key
          paths:
            - ~/.m2
  check-generated-python:
    docker:
      - image: "circleci/python:3.6-buster"
        environment:
          PIPENV_VENV_IN_PROJECT: true
      - image: "influxdb:latest"
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :8086
    steps:
      - checkout
      - influxdb-onboarding
      - attach_workspace:
          at: ./build
      - restore_cache:
          name: Restoring Pip Cache
          keys:
            - &cache-key pip-cache-v1-{{ checksum "build/influxdb-client-python/setup.py" }}
            - pip-cache-v1
      - run:
          name: "Check Generated Client"
          command: |
            cd ./build/influxdb-client-python
            pip install -e . --user
            pip install -e .\[extra\] --user
            pip install -e .\[test\] --user
            mkdir test-reports || true
            pytest tests --junitxml=test-reports/junit.xml
      - store_test_results:
          path: ./build/influxdb-client-python/test-reports
      - save_cache:
          name: Saving Pip Cache
          key: *cache-key
          paths:
            - ".venv"
            - "~/.cache/pip"
  check-generated-csharp:
    docker:
      - image: "mcr.microsoft.com/dotnet/core/sdk:3.1"
        environment:
          NET_TARGET_VERSION: netstandard2.1
      - image: "influxdb:latest"
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :9999
      - image: "influxdb:latest"
        name: influxdb_v2_onboarding
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :9999
      - image: influxdb:1.8-alpine
        environment:
          INFLUXDB_HTTP_FLUX_ENABLED: true
    environment:
      INFLUXDB_2_ONBOARDING_IP: influxdb_v2_onboarding
      INFLUXDB_2_ONBOARDING_PORT: 9999
    steps:
      - checkout
      - influxdb-onboarding:
          script-name: "influxdb-onboarding-v1v2"
      - attach_workspace:
          at: ./build
      - run:
          name: "Check Generated Client"
          command: |
            cd ./build/influxdb-client-csharp
            ./Scripts/ci-test.sh false
            mkdir test-results
            mkdir test-results/client-legacy
            cp -r Client.Legacy.Test/TestResults/*.xml test-results/client-legacy || true
            mkdir test-results/client-linq
            cp -r Client.Linq.Test/TestResults/*.xml test-results/client-linq || true
            mkdir test-results/client
            cp -r Client.Test/TestResults/*.xml test-results/client || true
            mkdir test-results/client-core
            cp -r Client.Core.Test/TestResults/*.xml test-results/client-core || true
      - store_test_results:
          path: ./build/influxdb-client-csharp/test-results
  check-generated-java:
    docker:
      - image: "circleci/openjdk:8"
      - image: "influxdb:latest"
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :9999
      - image: "influxdb:latest"
        name: influxdb_v2_onboarding
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :9999
      - image: influxdb:1.8-alpine
        environment:
          INFLUXDB_HTTP_FLUX_ENABLED: true
    environment:
      INFLUXDB_2_ONBOARDING_IP: influxdb_v2_onboarding
      INFLUXDB_2_ONBOARDING_PORT: 9999
    steps:
      - checkout
      - influxdb-onboarding:
          script-name: "influxdb-onboarding-v1v2"
      - attach_workspace:
          at: ./build
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - &cache-key maven-cache_v1-{{ checksum "./build/influxdb-client-java/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-core/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-kotlin/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-legacy/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-reactive/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-scala/cross/2.12/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-scala/cross/2.13/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-osgi/pom.xml" }}-{{ checksum "./build/influxdb-client-java/client-test/pom.xml" }}-{{ checksum "./build/influxdb-client-java/spring/pom.xml" }}-{{ checksum "./build/influxdb-client-java/flux-dsl/pom.xml" }}-{{ checksum "./build/influxdb-client-java/karaf/pom.xml" }}-{{ checksum "./build/influxdb-client-java/karaf/karaf-assembly/pom.xml" }}-{{ checksum "./build/influxdb-client-java/karaf/karaf-features/pom.xml" }}-{{ checksum "./build/influxdb-client-java/karaf/karaf-kar/pom.xml" }}
            - maven-cache_v1-
      - run:
          name: "Check Generated Client"
          command: |
            cd ./build/influxdb-client-java
            mvn -B -U clean install -Dmaven.javadoc.skip=true -Dmaven.dokka.skip=true -Dbuild.env=CI
      - run:
          name: "Copying test results"
          when: always
          command: |
            cd ./build/influxdb-client-java
            mkdir test-results
            mkdir test-results/client-core
            cp -r client-core/target/*/TEST-*.xml test-results/client-core || true
            mkdir test-results/client
            cp -r client/target/*/TEST-*.xml test-results/client || true
            mkdir test-results/client-legacy
            cp -r client-legacy/target/*/TEST-*.xml test-results/client-legacy || true
            mkdir test-results/client-reactive
            cp -r client-reactive/target/*/TEST-*.xml test-results/client-reactive || true
            mkdir test-results/client-kotlin
            cp -r client-kotlin/target/*/TEST-*.xml test-results/client-kotlin || true
            mkdir test-results/client-scala_2.12
            cp -r  client-scala/cross/2.12/target/*/TEST-*.xml test-results/client-scala_2.12 || true
            mkdir test-results/client-scala_2.13
            cp -r  client-scala/cross/2.13/target/*/TEST-*.xml test-results/client-scala_2.13 || true
            mkdir test-results/client-osgi
            cp -r client-osgi/target/*/TEST-*.xml test-results/client-osgi || true
            mkdir test-results/spring
            cp -r spring/target/*/TEST-*.xml test-results/spring || true
            mkdir test-results/flux-dsl
            cp -r flux-dsl/target/*/TEST-*.xml test-results/flux-dsl || true
      - save_cache:
          name: Saving Maven Cache
          key: *cache-key
          paths:
            - ~/.m2
      - store_test_results:
          path: ./build/influxdb-client-java/test-results
  check-generated-php:
    docker:
      - image: "circleci/php:7.4"
        environment:
          PIPENV_VENV_IN_PROJECT: true
      - image: "influxdb:latest"
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :8086
    steps:
      - checkout
      - influxdb-onboarding
      - attach_workspace:
          at: ./build
      - restore_cache:
          name: Restoring Composer Cache
          keys:
            - &cache-key composer-v1-{{ checksum "./build/influxdb-client-php/composer.json" }}
            - composer-v1-
      - run:
          name: Install dependencies
          command: |
            cd ./build/influxdb-client-php
            composer install -n --prefer-dist
            composer require guzzlehttp/guzzle:6.5.3 guzzlehttp/psr7:1.8.3
      - run:
          name: Run tests
          command: |
            cd ./build/influxdb-client-php
            vendor/bin/phpunit tests
      - save_cache:
          name: Saving Cache
          key: *cache-key
          paths:
            - vendor
      - store_test_results:
          path: ./build/influxdb-client-php/build/

workflows:
  version: 2
  build:
    jobs:
      - generate-client:
          name: generate-python
          client: python
          contracts: "oss.yml invocable-scripts.yml"
      - generate-client:
          name: generate-csharp
          client: csharp
      - generate-client:
          name: generate-java
          client: java
      - generate-client:
          name: generate-php
          client: php
      - check-generated-python:
          requires:
            - generate-python
      - check-generated-csharp:
          requires:
            - generate-csharp
      - check-generated-java:
          requires:
            - generate-java
      - check-generated-php:
          requires:
            - generate-php

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - generate-client:
          name: generate-python
          client: python
          contracts: "oss.yml invocable-scripts.yml"
      - generate-client:
          name: generate-csharp
          client: csharp
      - generate-client:
          name: generate-java
          client: java
      - generate-client:
          name: generate-php
          client: php
      - check-generated-python:
          requires:
            - generate-python
      - check-generated-csharp:
          requires:
            - generate-csharp
      - check-generated-java:
          requires:
            - generate-java
      - check-generated-php:
          requires:
            - generate-php
