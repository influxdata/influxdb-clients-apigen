diff --git a/Client.Test/ItAuthorizationsApiTest.cs b/Client.Test/ItAuthorizationsApiTest.cs
index c5c82e6..4de4de3 100644
--- a/Client.Test/ItAuthorizationsApiTest.cs
+++ b/Client.Test/ItAuthorizationsApiTest.cs
@@ -26,13 +26,13 @@ namespace InfluxDB.Client.Test
         {
             var readUsers = new Permission(
                 Permission.ActionEnum.Read,
-                new PermissionResource { Type = PermissionResource.TypeEnum.Users, OrgID = _organization.Id }
+                new PermissionResource { Type = PermissionResource.TypeUsers, OrgID = _organization.Id }
             );
 
             var writeOrganizations = new Permission
             (
                 Permission.ActionEnum.Write,
-                new PermissionResource { Type = PermissionResource.TypeEnum.Orgs, OrgID = _organization.Id }
+                new PermissionResource { Type = PermissionResource.TypeOrgs, OrgID = _organization.Id }
             );
 
             var permissions = new List<Permission> { readUsers, writeOrganizations };
@@ -47,11 +47,11 @@ namespace InfluxDB.Client.Test
             Assert.AreEqual(authorization.Status, AuthorizationUpdateRequest.StatusEnum.Active);
 
             Assert.AreEqual(authorization.Permissions.Count, 2);
-            Assert.AreEqual(authorization.Permissions[0].Resource.Type, PermissionResource.TypeEnum.Users);
+            Assert.AreEqual(authorization.Permissions[0].Resource.Type, PermissionResource.TypeUsers);
             Assert.AreEqual(authorization.Permissions[0].Resource.OrgID, _organization.Id);
             Assert.AreEqual(authorization.Permissions[0].Action, Permission.ActionEnum.Read);
 
-            Assert.AreEqual(authorization.Permissions[1].Resource.Type, PermissionResource.TypeEnum.Orgs);
+            Assert.AreEqual(authorization.Permissions[1].Resource.Type, PermissionResource.TypeOrgs);
             Assert.AreEqual(authorization.Permissions[1].Resource.OrgID, _organization.Id);
             Assert.AreEqual(authorization.Permissions[1].Action, Permission.ActionEnum.Write);
 
@@ -66,7 +66,7 @@ namespace InfluxDB.Client.Test
         public async Task AuthorizationDescription()
         {
             var writeSources = new Permission(Permission.ActionEnum.Write,
-                new PermissionResource { Type = PermissionResource.TypeEnum.Sources, OrgID = _organization.Id }
+                new PermissionResource { Type = PermissionResource.TypeSources, OrgID = _organization.Id }
             );
 
             var authorization = new AuthorizationPostRequest
@@ -86,7 +86,7 @@ namespace InfluxDB.Client.Test
         public async Task UpdateAuthorizationStatus()
         {
             var readUsers = new Permission(Permission.ActionEnum.Read,
-                new PermissionResource { Type = PermissionResource.TypeEnum.Users, OrgID = _organization.Id }
+                new PermissionResource { Type = PermissionResource.TypeUsers, OrgID = _organization.Id }
             );
 
             var permissions = new List<Permission> { readUsers };
@@ -200,7 +200,7 @@ namespace InfluxDB.Client.Test
             Assert.AreEqual(source.Description, cloned.Description);
             Assert.AreEqual(1, cloned.Permissions.Count);
             Assert.AreEqual(Permission.ActionEnum.Read, cloned.Permissions[0].Action);
-            Assert.AreEqual(PermissionResource.TypeEnum.Users, cloned.Permissions[0].Resource.Type);
+            Assert.AreEqual(PermissionResource.TypeUsers, cloned.Permissions[0].Resource.Type);
             Assert.AreEqual(_organization.Id, cloned.Permissions[0].Resource.OrgID);
         }
 
@@ -217,7 +217,7 @@ namespace InfluxDB.Client.Test
         private List<Permission> NewPermissions()
         {
             var resource = new PermissionResource
-                { Type = PermissionResource.TypeEnum.Users, OrgID = _organization.Id };
+                { Type = PermissionResource.TypeUsers, OrgID = _organization.Id };
 
             var permission = new Permission(Permission.ActionEnum.Read, resource);
 
diff --git a/Client.Test/ItDeleteApiTest.cs b/Client.Test/ItDeleteApiTest.cs
index f1b6453..3888116 100644
--- a/Client.Test/ItDeleteApiTest.cs
+++ b/Client.Test/ItDeleteApiTest.cs
@@ -25,7 +25,7 @@ namespace InfluxDB.Client.Test
             // Add Permissions to read and write to the Bucket
             //
             var resource =
-                new PermissionResource(PermissionResource.TypeEnum.Buckets, _bucket.Id, null,
+                new PermissionResource(PermissionResource.TypeBuckets, _bucket.Id, null,
                     _organization.Id);
 
             var readBucket = new Permission(Permission.ActionEnum.Read, resource);
diff --git a/Client.Test/ItTasksApiTest.cs b/Client.Test/ItTasksApiTest.cs
index 9bf4e7f..deaace6 100644
--- a/Client.Test/ItTasksApiTest.cs
+++ b/Client.Test/ItTasksApiTest.cs
@@ -45,13 +45,13 @@ namespace InfluxDB.Client.Test
 
         private async Task<Authorization> AddAuthorization(Organization organization)
         {
-            var resourceTask = new PermissionResource(PermissionResource.TypeEnum.Tasks, null, null, organization.Id);
-            var resourceBucket = new PermissionResource(PermissionResource.TypeEnum.Buckets,
+            var resourceTask = new PermissionResource(PermissionResource.TypeTasks, null, null, organization.Id);
+            var resourceBucket = new PermissionResource(PermissionResource.TypeBuckets,
                 (await Client.GetBucketsApi().FindBucketByNameAsync("my-bucket")).Id, null, organization.Id);
-            var resourceOrg = new PermissionResource(PermissionResource.TypeEnum.Orgs);
-            var resourceUser = new PermissionResource(PermissionResource.TypeEnum.Users);
-            var resourceAuthorization = new PermissionResource(PermissionResource.TypeEnum.Authorizations);
-            var resourceLabels = new PermissionResource(PermissionResource.TypeEnum.Labels);
+            var resourceOrg = new PermissionResource(PermissionResource.TypeOrgs);
+            var resourceUser = new PermissionResource(PermissionResource.TypeUsers);
+            var resourceAuthorization = new PermissionResource(PermissionResource.TypeAuthorizations);
+            var resourceLabels = new PermissionResource(PermissionResource.TypeLabels);
 
 
             var authorization = await Client.GetAuthorizationsApi()
diff --git a/Client.Test/ItWriteApiAsyncTest.cs b/Client.Test/ItWriteApiAsyncTest.cs
index 7b2346b..77c2222 100644
--- a/Client.Test/ItWriteApiAsyncTest.cs
+++ b/Client.Test/ItWriteApiAsyncTest.cs
@@ -28,7 +28,7 @@ namespace InfluxDB.Client.Test
             //
             // Add Permissions to read and write to the Bucket
             //
-            var resource = new PermissionResource(PermissionResource.TypeEnum.Buckets, _bucket.Id, null,
+            var resource = new PermissionResource(PermissionResource.TypeBuckets, _bucket.Id, null,
                 _organization.Id);
 
             var readBucket = new Permission(Permission.ActionEnum.Read, resource);
diff --git a/Client.Test/ItWriteApiRaceTest.cs b/Client.Test/ItWriteApiRaceTest.cs
index edf1477..3aa2bab 100644
--- a/Client.Test/ItWriteApiRaceTest.cs
+++ b/Client.Test/ItWriteApiRaceTest.cs
@@ -24,7 +24,7 @@ namespace InfluxDB.Client.Test
             // Add Permissions to read and write to the Bucket
             //
             var resource =
-                new PermissionResource(PermissionResource.TypeEnum.Buckets, _bucket.Id, null, _organization.Id);
+                new PermissionResource(PermissionResource.TypeBuckets, _bucket.Id, null, _organization.Id);
 
             var readBucket = new Permission(Permission.ActionEnum.Read, resource);
             var writeBucket = new Permission(Permission.ActionEnum.Write, resource);
diff --git a/Client.Test/ItWriteQueryApiTest.cs b/Client.Test/ItWriteQueryApiTest.cs
index ce1a64a..56e158a 100644
--- a/Client.Test/ItWriteQueryApiTest.cs
+++ b/Client.Test/ItWriteQueryApiTest.cs
@@ -31,7 +31,7 @@ namespace InfluxDB.Client.Test
             // Add Permissions to read and write to the Bucket
             //
             var resource =
-                new PermissionResource(PermissionResource.TypeEnum.Buckets, _bucket.Id, null, _organization.Id);
+                new PermissionResource(PermissionResource.TypeBuckets, _bucket.Id, null, _organization.Id);
 
             var readBucket = new Permission(Permission.ActionEnum.Read, resource);
             var writeBucket = new Permission(Permission.ActionEnum.Write, resource);
diff --git a/Client/README.md b/Client/README.md
index 8d987ce..f3966ad 100644
--- a/Client/README.md
+++ b/Client/README.md
@@ -815,7 +815,7 @@ namespace Examples
             //
             // Create access token to "iot_bucket"
             //
-            var resource = new PermissionResource(PermissionResource.TypeEnum.Buckets, bucket.Id, null,
+            var resource = new PermissionResource(PermissionResource.TypeBuckets, bucket.Id, null,
                 orgId);
 
             // Read permission
diff --git a/Examples/ManagementExample.cs b/Examples/ManagementExample.cs
index 7b8b5d7..0cf43c3 100644
--- a/Examples/ManagementExample.cs
+++ b/Examples/ManagementExample.cs
@@ -30,7 +30,7 @@ namespace Examples
             //
             // Create access token to "iot_bucket"
             //
-            var resource = new PermissionResource(PermissionResource.TypeEnum.Buckets, bucket.Id, null,
+            var resource = new PermissionResource(PermissionResource.TypeBuckets, bucket.Id, null,
                 orgId);
 
             // Read permission
diff --git a/Examples/PlatformExample.cs b/Examples/PlatformExample.cs
index 6980c8c..150d134 100644
--- a/Examples/PlatformExample.cs
+++ b/Examples/PlatformExample.cs
@@ -50,7 +50,7 @@ namespace Examples
             // Add Permissions to read and write to the Bucket
             //
             var resource = new PermissionResource
-                { Type = PermissionResource.TypeEnum.Buckets, OrgID = medicalGMBH.Id, Id = temperatureBucket.Id };
+                { Type = PermissionResource.TypeBuckets, OrgID = medicalGMBH.Id, Id = temperatureBucket.Id };
 
             var readBucket = new Permission(Permission.ActionEnum.Read, resource);
             var writeBucket = new Permission(Permission.ActionEnum.Write, resource);
